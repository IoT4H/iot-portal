name: Docker Image CI

on:
  push:
    branches: [ "main", "develop" ]
    tags: ["*"]


jobs:
  # This pushes the image to GitHub Packages.
  backend:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      #
    steps:
      - uses: actions/checkout@v4
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Active buildx build
        run: docker buildx create --use
      - name: Build the Docker strapi
        run: docker buildx build ./strapi-backend --cache-from type=registry,ref="ghcr.io/iot4h/portal-api:${{ github.ref_name }}-cache" --cache-to type=registry,ref="ghcr.io/iot4h/ghcr.io/iot4h/portal-api:${{ github.ref_name }}-cache",mode=max -t ghcr.io/iot4h/portal-api --label "runnumber=${GITHUB_RUN_ID}" --push
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag ghcr.io/iot4h/portal-api ghcr.io/iot4h/portal-api:$VERSION
          docker push ghcr.io/iot4h/portal-api:$VERSION
  frontend:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      #
    steps:
      - uses: actions/checkout@v4
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Active buildx build
        run: docker buildx create --use
      - name: Build the Docker frontend
        run: docker buildx build ./frontend --cache-from type=registry,ref="ghcr.io/iot4h/portal-ui:${{ github.ref_name }}-cache" --cache-to type=registry,ref="ghcr.io/iot4h/portal-ui:${{ github.ref_name }}-cache",mode=max -t ghcr.io/iot4h/portal-ui --label "runnumber=${GITHUB_RUN_ID}" --push
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag ghcr.io/iot4h/portal-ui ghcr.io/iot4h/portal-ui:$VERSION
          docker push ghcr.io/iot4h/portal-ui:$VERSION
  littlefs-creator:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      #
    steps:
      - uses: actions/checkout@v4
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Active buildx build
        run: docker buildx create --use
      - name: Build the Docker frontend
        run: docker buildx build ./littlefs-data-creator --cache-from type=registry,ref="ghcr.io/iot4h/portal-littlefs-creator:${{ github.ref_name }}-cache" --cache-to type=registry,ref="ghcr.io/iot4h/portal-littlefs-creator:${{ github.ref_name }}-cache",mode=max -t ghcr.io/iot4h/portal-littlefs-creator --label "runnumber=${GITHUB_RUN_ID}" --push
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag ghcr.io/iot4h/portal-littlefs-creator ghcr.io/iot4h/portal-littlefs-creator:$VERSION
          docker push ghcr.io/iot4h/portal-littlefs-creator:$VERSION
